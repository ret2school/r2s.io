<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>hitcon on ret2school</title>
    <link>https://ret2school.github.io/tags/hitcon/</link>
    <description>Recent content in hitcon on ret2school</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 02 Jan 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://ret2school.github.io/tags/hitcon/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[Hitcon 2021 - web] Vulpixelize</title>
      <link>https://ret2school.github.io/post/vulpixelize/</link>
      <pubDate>Sun, 02 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://ret2school.github.io/post/vulpixelize/</guid>
      <description>HITCON 2021 - Vulpixelize (232 points) My solution for this challenge is maybe unintended and not very technical, but it works :)
 We can send a URL that the bot will visit.
It then takes a screenshot of the page, blurs it and returns us the result :
@app.route(&amp;#39;/submit&amp;#39;, methods=[&amp;#39;GET&amp;#39;]) def submit(): path = &amp;#39;static/images/%s.png&amp;#39; % uuid.uuid4().hex url = request.args.get(&amp;#39;url&amp;#39;) if url: # secrity check if not url.startswith(&amp;#39;http://&amp;#39;) and not url.</description>
    </item>
    
    <item>
      <title>[Hitcon CTF 2020 - forensic] AC1750</title>
      <link>https://ret2school.github.io/post/forensic/</link>
      <pubDate>Tue, 01 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://ret2school.github.io/post/forensic/</guid>
      <description>Hello world,
The write up is about the AC1750 challenge in HITCON ctf. It&amp;rsquo;s a forensic challenge, where we need to analyze packets captured by Wireshark to find out what an attacker is doing on the network.
First, we need to analyze intercepted traffic with wireshark. We see a lot of HTTP packets, and some contain &amp;ldquo;Archer&amp;rdquo; references. We can see weird UDP packets with port 20002.
After some google-fu on port 20002, we come accross this, and we can see there is a CVE targeting T-Link Archer devices.</description>
    </item>
    
  </channel>
</rss>
