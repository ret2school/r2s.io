<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MorpheusH3x on ret2school</title>
    <link>https://ret2school.github.io/tags/morpheush3x/</link>
    <description>Recent content in MorpheusH3x on ret2school</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 04 Mar 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://ret2school.github.io/tags/morpheush3x/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[Breizh CTF 2022 - prog] PYCTHON</title>
      <link>https://ret2school.github.io/post/pycthon/</link>
      <pubDate>Fri, 04 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://ret2school.github.io/post/pycthon/</guid>
      <description>Description: Nous n&#39;arrivons pas à retrouver l&#39;information cachée à partir de ce fichier... Auteur: T0fix Format : BZHCTF{}  The provided file is a .pyc which contains compiled pseudo-code for a program written in Python.
You just have to use the uncompyle6 package with the following command: uncompyle6 -o .pycthon.cpython-38.pyc
We obtain then, the source python code:
def hoflag(): tab = [ &amp;#39;U&amp;#39;, &amp;#39;n&amp;#39;, &amp;#39;c&amp;#39;, &amp;#39;0&amp;#39;, &amp;#39;m&amp;#39;, &amp;#39;p&amp;#39;, &amp;#39;y&amp;#39;, &amp;#39;l&amp;#39;, &amp;#39;3&amp;#39;, &amp;#39;d&amp;#39;, &amp;#39;_&amp;#39;, &amp;#39;P&amp;#39;, &amp;#39;y&amp;#39;, &amp;#39;t&amp;#39;, &amp;#39;h&amp;#39;, &amp;#39;0&amp;#39;, &amp;#39;n&amp;#39;, &amp;#39;_&amp;#39;, &amp;#39;f&amp;#39;, &amp;#39;1&amp;#39;, &amp;#39;l&amp;#39;, &amp;#39;E&amp;#39;] flag = &amp;#39;&amp;#39;.</description>
    </item>
    
    <item>
      <title>[Breizh CTF 2022 - reverse] L&#39;appli secrète du breizhCTF</title>
      <link>https://ret2school.github.io/post/app-secrete-du-breizhctf/</link>
      <pubDate>Fri, 04 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://ret2school.github.io/post/app-secrete-du-breizhctf/</guid>
      <description>Value: 131 Description: En arrivant à Rennes au BreizhCTF, vous avez trouvé un téléphone par terre et avez décidé de le garder avec vous. Vous vous rendez compte que sur ce téléphone, il y a une appli &#39;SuperSecretApp&#39;. Malheureusement, pour accéder à son contenu, vous devez avoir la bonne combinaison du username et du password. Vous avez donc décidé de reverse l&#39;application pour trouvez cela! Auteur: Worty Format : BZHCTF{username-password}  The file provided is an .</description>
    </item>
    
    <item>
      <title>[Breizh CTF 2022- Forensic] La livraison de pizza</title>
      <link>https://ret2school.github.io/post/livraison-de-pizza/</link>
      <pubDate>Fri, 04 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://ret2school.github.io/post/livraison-de-pizza/</guid>
      <description>Value: 50 Description: Un nouvel employé travaille tranquillement à son bureau, quand quelqu&#39;un se présente devant pour &#39;Livraison de galettes saucisses&#39;. Il est nouveau, mais il se dit qu&#39;en Bretagne, après tout, cela doit arriver. Il est donc venu dans votre bureau vous demandez si vous aviez commandé, mais votre réponse est non. Il revient tout paniqué en vous disant que son anvitirus a enregistré un traffic USB inhabituel. L&#39;anvitirus de votre entreprise est configuré pour prendre des dumps réseaux de tout le traffic, même le traffic USB !</description>
    </item>
    
    <item>
      <title>[Breizh CTF 2022- misc] My homework... NO !</title>
      <link>https://ret2school.github.io/post/my-homework...-no-/</link>
      <pubDate>Fri, 04 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://ret2school.github.io/post/my-homework...-no-/</guid>
      <description>Description: Je dois rendre mon tp ce soir mais j&#39;ai supprimé le dossier où se trouvaient mes bianires. Par chance il tourne encore, pouvez-vous m&#39;aider à le récupérer ? Login/Password : gaston:gaston ssh challenges.ctf.bzh:24001 Auteur: LaChenilleBarbue Format : BZHCTF{sha512sum(binaire)}  Let&amp;rsquo;s start by connecting to the server with the credentials we have been given and list the processes that are running:
&amp;gt; ssh challenges.ctf.bzh -p 24001 -l gaston gaston@challenges.ctf.bzh&#39;s password: gaston@726bc5597730:~$ ps -aux USER PID %CPU %MEM VSZ RSS TTY STAT START TIME COMMAND root 1 0.</description>
    </item>
    
    <item>
      <title>[Breizh CTF 2022- reverse] Baby</title>
      <link>https://ret2school.github.io/post/baby/</link>
      <pubDate>Fri, 04 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://ret2school.github.io/post/baby/</guid>
      <description>Value: 50 Description: Le reverse c&#39;est quand même vachement compliqué... ou pas ? Auteur: Worty Format : BZHCTF{}  Like all the CTF challenges named &amp;ldquo;Baby&amp;rdquo;, this challenge was very simple.
You just had to open the source code in radare2 to see the flag in clear:
&amp;gt; r2 baby [0x00001070]&amp;gt; aaa [Cannot find function at 0x00001070 sym. and entry0 (aa) [x] Analyze all flags starting with sym. and entry0 (aa) [x] Analyze function calls (aac) [x] Analyze len bytes of instructions for references (aar) [x] Check for objc references [x] Check for vtables [x] Type matching analysis for all functions (aaft) [x] Propagate noreturn information [x] Use -AA or aaaa to perform additional experimental analysis.</description>
    </item>
    
  </channel>
</rss>
