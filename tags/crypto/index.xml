<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>crypto on ret2school</title>
    <link>https://ret2school.github.io/tags/crypto/</link>
    <description>Recent content in crypto on ret2school</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 02 Jun 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://ret2school.github.io/tags/crypto/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[ESAIP CTF 2023 - crypto] All crypto challenges</title>
      <link>https://ret2school.github.io/post/esaip_crypto/</link>
      <pubDate>Fri, 02 Jun 2023 00:00:00 +0000</pubDate>
      
      <guid>https://ret2school.github.io/post/esaip_crypto/</guid>
      <description>This article contains write-ups for all cryptography challenges from ESAIP CTF 2023. All challenge files, prompts and solves are available here.
The event was nice and I had a great time competing with my friends. However, I&amp;rsquo;d like to quickly rant before diving into the write-ups.
&amp;lt;rant&amp;gt;
 I can&amp;rsquo;t believe this has to be said but before giving source code, please make sure that it works. Added bonus: publish the Dockerfiles you use so players don&amp;rsquo;t have to waste time debugging.</description>
    </item>
    
    <item>
      <title>[JustCTF - crypto] Vaulted</title>
      <link>https://ret2school.github.io/post/vaulted/</link>
      <pubDate>Fri, 02 Jun 2023 00:00:00 +0000</pubDate>
      
      <guid>https://ret2school.github.io/post/vaulted/</guid>
      <description>Vaulted  This secure multisignature application will keep our flag safe. Mind holding on to one of the backup keys?
nc vaulted.nc.jctf.pro 1337
Author: Tjaden Hess from Trail of Bits
 Vaulted was an easy crypto challenge from JustCTF 2023. To be fair it wasn&amp;rsquo;t really a crypto challenge, you&amp;rsquo;d instantly know how to solve the challenge if you had a bit of crypto knowledge (especially on elliptic curves and how points can be represented) but if you didn&amp;rsquo;t a bit of source code reading would make the solution obvious.</description>
    </item>
    
    <item>
      <title>[pwnme 2023 - crypto] Scream Like Viking</title>
      <link>https://ret2school.github.io/post/screamlikeviking/</link>
      <pubDate>Mon, 22 May 2023 00:00:00 +0000</pubDate>
      
      <guid>https://ret2school.github.io/post/screamlikeviking/</guid>
      <description>Scream Like Viking  Our protagonist John is in a room, he hears some kind of noise, like something resonating. But he doesn&amp;rsquo;t understand it&amp;hellip; Perhaps he could play with his own echoes to guess what the meaning of this famous resonance could be&amp;hellip;
nc 51.68.95.78 32773
 Scream Like Viking&#34;
This article is a write-up for &amp;ldquo;Scream Like Viking&amp;rdquo;, a cryptography challenge from PwnMe 2023.
TL;DR  Get pairs of (C, N) where N is recovered by taking GCD of multiple M^e - C HÃ¥stad&amp;rsquo;s broadcast attack (CRT + e-th root) on the pairs of (C, N)  Code review The following source code is given:</description>
    </item>
    
    <item>
      <title>[Midnight Sun CTF 2021 - Crypto] frank</title>
      <link>https://ret2school.github.io/post/writeuprsa/</link>
      <pubDate>Sun, 11 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://ret2school.github.io/post/writeuprsa/</guid>
      <description>Welcome folks,
This writeup is about the Midnight Sun CTF frank challenge on how to recover a full RSA private key, when half of it is erased. Thanks to this recent cryptohack write-up from which this challenge is (for me) inspired. Challenge therefore requires recovering the entire RSA key from this image:
Get the part of the private key visible: The first step of the challenge is to recover the visible part, to do this I quickly created a small OCR script with the pytesseract module in Python, to facilitate the recovery task.</description>
    </item>
    
  </channel>
</rss>
